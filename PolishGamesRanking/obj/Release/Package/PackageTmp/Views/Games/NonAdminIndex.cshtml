@using Microsoft.AspNet.Identity
@using Microsoft.AspNet.Identity.EntityFramework
@using PolishGamesRanking.Models
@model IEnumerable<PolishGamesRanking.Models.Game>
@{
    ViewBag.Title = "BazaGier";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Gry</h2>
<div class="panel panel-default">
    <div class="panel-body">
        <h5>
            Szereguj wg: <button class="btn-link" id="sortbyrate" align="center">Najlepiej ocenianych</button>
            <button class="btn-link" id="sortbyvotes" align="center">Najpopularniejszych</button>
        </h5>
    </div>
</div>
<table id="games" class="table table-bordered table-hover">
    <thead>
    <tr>
        <th>Ocena</th>
        <th>Okładka</th>
        <th>Tytuł</th>
        <th>Gatunek</th>
        <th>Data premiery</th>
        <th>Deweloper</th>
        <th>Wydawca</th>
        <th>Moja ocena</th>
        <th>Liczba głosów</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var game in Model)
    {
        <tr>
            <td>
                @{
                    var ratingString = game.Rating.ToString("0.00");
                }@ratingString
            </td>
            <td align="center">
                @if (@game.Files.Any())
                {
                    <dd>
                        @{
                            var base64 = Convert.ToBase64String(game.Files.First().Content);
                            var imgSrc = $"data:image/gif;base64,{base64}";
                        }

                        <img src="@imgSrc" width="70" class="img-responsive"/>
                    </dd><br/>
                }
                @{
                    var ratingRount = game.Rating.ToString("0.0");
                    var percent = float.Parse(ratingRount) * 10;
                }
                <div class="progress">
                    <div class="progress-bar progress-bar-warning" style="width: @percent%"></div>
                </div>
            </td>
            <td>@Html.ActionLink(game.Name, "Details", "Games", new {id = game.Id}, null)</td>
            <td>@game.GameGenre.Name</td>
            <td>@game.ReleaseDate.ToShortDateString()</td>
            <td>@game.Developer</td>
            <td>@game.Publisher</td>
            @{
                var store = new UserStore<ApplicationUser>(new ApplicationDbContext());
                var userManager = new UserManager<ApplicationUser>(store);
                ApplicationUser user = userManager.FindByIdAsync(User.Identity.GetUserId()).Result;
                var _context = new ApplicationDbContext();
                var ratedGames = _context.RatedGames;
                int userRate = 0;
                foreach (var ratedGame in ratedGames)
                {
                    if (ratedGame.ApplicationUserId == user.Id)
                    {
                        if (ratedGame.GameId == game.Id)
                        {
                            userRate = ratedGame.UsersRate;
                        }
                    }
                }
            }
            @if (userRate > 0)
            {
                <td align="center">@userRate</td>
            }
            else
            {
                <td align="center">-</td>
            }
            <td>@game.RatingsCount</td>
        </tr>
    }
    </tbody>
</table>
@Html.ActionLink("Dodaj grę", "New", "Games", null, new {@class="btn btn-danger"})
<br/>
<br/>
<br/>

@section scripts
{
<script>
        $(document).ready(function() {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }
            $(function() {
                var msg = "@(TempData["Msg"] as string)";
                if (msg !== "") {
                    toastr.success(msg);
                }
            });
            var table = $("#games").DataTable({
                //ajax: {
                //    url: "api/games",
                //    dataSrc: ""
                //},
                //columns: [
                //    {
                //        data: "rating"
                //    },
                //    {
                //        data: "name",
                //        render: function(data, type, game) {
                //            return "<a href='/games/details/" + game.id + "'>" + game.name + "</a>";
                //        }
                //    },
                //    {
                //        data: "name"
                //    },
                //    {
                //        data: "releasedate"
                //    },
                //    {
                //        data: "developer"
                //    },
                //    {
                //        data: "publisher"
                //    },
                //    {
                //        data: "id",
                //        render: function(data) {
                //            return "<button class='btn-link js-delete' data-game-id=" + data + ">Usuń</button>";
                //        }
                //    }
                //],
                "columnDefs": [
                    {
                        "targets": [8],
                        "visible": false,
                        "searchable": false

                    },
                    { "orderSequence": ["desc"], "targets": [8] },
                    { "orderSequence": ["desc"], "targets": [0] }
                ],
                "ordering": true,
                "order": [[0, "desc"]],
                "language": {
                    "decimal": "",
                    "emptyTable": "Brak danych w tabeli",
                    "info": "Gry od _START_ do _END_,  wszystkich gier: _TOTAL_",
                    "infoEmpty": "Gry 0 do 0 z 0 wpisów",
                    "infoFiltered": "(filtered from _MAX_ total entries)",
                    "infoPostFix": "",
                    "thousands": ",",
                    "lengthMenu": "Pokaż _MENU_ gier",
                    "loadingRecords": "Wczytywanie...",
                    "processing": "Processing...",
                    "search": "Szukaj:",
                    "zeroRecords": "Brak pasujących wpisów",
                    "paginate": {
                        "first": "Pierwsza",
                        "last": "Ostatnia",
                        "next": "Następna",
                        "previous": "Poprzednia"
                    },
                }
            });

            table.order.listener($("#sortbyvotes"), 8, "desc");
            table.order.listener($("#sortbyrate"), 0, "desc");
        })
</script>
}
